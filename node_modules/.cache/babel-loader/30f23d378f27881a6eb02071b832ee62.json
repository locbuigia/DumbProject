{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro15/Work/Dev/rockpaper/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  this.state = {};\n  const choices = ['rock', 'paper', 'scissor'];\n\n  function computerPlay() {\n    return choices[Math.floor(Math.random() * choices.length)];\n  }\n\n  function playRound(playerSelection, compSelection) {\n    const x = choices.indexOf(playerSelection);\n    const y = choices.indexOf(compSelection);\n\n    if (x === y) {\n      return \"Tie\";\n    }\n\n    if (x - y === 1 || x - y === -2) {\n      return \"Player wins with \" + playerSelection;\n    } else if (y - x === 1 || y - x === -2) {\n      return \"Comp wins with \" + compSelection;\n    }\n  }\n\n  const compSel = computerPlay();\n  const playerSel = 'paper';\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Player Choose:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"playerChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), console.log('Player choose', playerSel, '\\nComp choose', compSel, '\\nResult', playRound(playerSel, compSel)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro15/Work/Dev/rockpaper/src/App.js"],"names":["React","App","state","choices","computerPlay","Math","floor","random","length","playRound","playerSelection","compSelection","x","indexOf","y","compSel","playerSel","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,OAAKC,KAAL,GAAa,EAAb;AAEA,QAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;;AAEA,WAASC,YAAT,GAAwB;AACtB,WAAOD,OAAO,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcJ,OAAO,CAACK,MAAjC,CAAD,CAAd;AACD;;AAED,WAASC,SAAT,CAAmBC,eAAnB,EAAoCC,aAApC,EAAmD;AACjD,UAAMC,CAAC,GAAGT,OAAO,CAACU,OAAR,CAAgBH,eAAhB,CAAV;AACA,UAAMI,CAAC,GAAGX,OAAO,CAACU,OAAR,CAAgBF,aAAhB,CAAV;;AACA,QAAIC,CAAC,KAAKE,CAAV,EAAa;AACX,aAAO,KAAP;AACD;;AAED,QAAIF,CAAC,GAACE,CAAF,KAAQ,CAAR,IAAaF,CAAC,GAACE,CAAF,KAAQ,CAAC,CAA1B,EAA6B;AAC3B,aAAO,sBAAsBJ,eAA7B;AACD,KAFD,MAEO,IAAII,CAAC,GAACF,CAAF,KAAQ,CAAR,IAAaE,CAAC,GAACF,CAAF,KAAQ,CAAC,CAA1B,EAA6B;AAClC,aAAO,oBAAoBD,aAA3B;AACD;AACF;;AAED,QAAMI,OAAO,GAAGX,YAAY,EAA5B;AACA,QAAMY,SAAS,GAAG,OAAlB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQGC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,SAA7B,EAAwC,eAAxC,EAAyDD,OAAzD,EAAkE,UAAlE,EAA8EN,SAAS,CAACO,SAAD,EAAYD,OAAZ,CAAvF,CARH,CADF;AAYD;;AAED,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  this.state = {}\n\n  const choices = ['rock', 'paper', 'scissor']\n\n  function computerPlay() {\n    return choices[Math.floor(Math.random()*choices.length)]\n  }\n\n  function playRound(playerSelection, compSelection) {\n    const x = choices.indexOf(playerSelection);\n    const y = choices.indexOf(compSelection);\n    if (x === y) {\n      return \"Tie\";\n    }\n\n    if (x-y === 1 || x-y === -2) {\n      return \"Player wins with \" + playerSelection;\n    } else if (y-x === 1 || y-x === -2) {\n      return \"Comp wins with \" + compSelection;\n    }\n  }\n\n  const compSel = computerPlay();\n  const playerSel = 'paper';\n  return (\n    <div className=\"App\">\n      <form>\n        <label>\n          Player Choose:\n          <input type=\"text\" name=\"playerChoice\" />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {console.log('Player choose', playerSel, '\\nComp choose', compSel, '\\nResult', playRound(playerSel, compSel))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}