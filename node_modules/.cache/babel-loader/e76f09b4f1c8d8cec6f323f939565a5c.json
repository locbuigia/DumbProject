{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro15/Work/Dev/rockpaper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro15/Work/Dev/rockpaper/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        playerSel = _useState2[0],\n        setPlayerSel = _useState2[1];\n\n  const choices = ['rock', 'paper', 'scissor'];\n\n  function handleChange(event) {\n    setPlayerSel(event.target.value);\n  }\n\n  function handleSubmit(compSel) {\n    alert(playRound(playerSel, compSel));\n  }\n\n  function computerPlay() {\n    return choices[Math.floor(Math.random() * choices.length)];\n  }\n\n  function playRound(playerSelection, compSelection) {\n    const x = choices.indexOf(playerSelection);\n    const y = choices.indexOf(compSelection);\n\n    if (x === y) {\n      return \"Tie\";\n    }\n\n    if (x - y === 1 || x - y === -2) {\n      return \"Player wins with \" + playerSelection;\n    } else if (y - x === 1 || y - x === -2) {\n      return \"Comp wins with \" + compSelection;\n    }\n  }\n\n  const compSel = computerPlay();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: () => handleSubmit(compSel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Player Choose:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"playerChoice\",\n    value: playerSel,\n    onChange: e => handleChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro15/Work/Dev/rockpaper/src/App.js"],"names":["React","useState","App","playerSel","setPlayerSel","choices","handleChange","event","target","value","handleSubmit","compSel","alert","playRound","computerPlay","Math","floor","random","length","playerSelection","compSelection","x","indexOf","y","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACqBD,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,QACNE,SADM;AAAA,QACKC,YADL;;AAGb,QAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BH,IAAAA,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD;;AAED,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7BC,IAAAA,KAAK,CAACC,SAAS,CAACV,SAAD,EAAYQ,OAAZ,CAAV,CAAL;AACD;;AAED,WAASG,YAAT,GAAwB;AACtB,WAAOT,OAAO,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcZ,OAAO,CAACa,MAAjC,CAAD,CAAd;AACD;;AAED,WAASL,SAAT,CAAmBM,eAAnB,EAAoCC,aAApC,EAAmD;AACjD,UAAMC,CAAC,GAAGhB,OAAO,CAACiB,OAAR,CAAgBH,eAAhB,CAAV;AACA,UAAMI,CAAC,GAAGlB,OAAO,CAACiB,OAAR,CAAgBF,aAAhB,CAAV;;AACA,QAAIC,CAAC,KAAKE,CAAV,EAAa;AACX,aAAO,KAAP;AACD;;AAED,QAAIF,CAAC,GAACE,CAAF,KAAQ,CAAR,IAAaF,CAAC,GAACE,CAAF,KAAQ,CAAC,CAA1B,EAA6B;AAC3B,aAAO,sBAAsBJ,eAA7B;AACD,KAFD,MAEO,IAAII,CAAC,GAACF,CAAF,KAAQ,CAAR,IAAaE,CAAC,GAACF,CAAF,KAAQ,CAAC,CAA1B,EAA6B;AAClC,aAAO,oBAAoBD,aAA3B;AACD;AACF;;AAED,QAAMT,OAAO,GAAGG,YAAY,EAA5B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,MAAMJ,YAAY,CAACC,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAuC,IAAA,KAAK,EAAER,SAA9C;AAAyD,IAAA,QAAQ,EAAEqB,CAAC,IAAIlB,YAAY,CAACkB,CAAD,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAYD;;AAED,eAAetB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [playerSel, setPlayerSel] = useState('');\n\n  const choices = ['rock', 'paper', 'scissor']\n\n  function handleChange(event) {\n    setPlayerSel(event.target.value)\n  }\n\n  function handleSubmit(compSel) {\n    alert(playRound(playerSel, compSel))\n  }\n\n  function computerPlay() {\n    return choices[Math.floor(Math.random()*choices.length)]\n  }\n\n  function playRound(playerSelection, compSelection) {\n    const x = choices.indexOf(playerSelection);\n    const y = choices.indexOf(compSelection);\n    if (x === y) {\n      return \"Tie\";\n    }\n\n    if (x-y === 1 || x-y === -2) {\n      return \"Player wins with \" + playerSelection;\n    } else if (y-x === 1 || y-x === -2) {\n      return \"Comp wins with \" + compSelection;\n    }\n  }\n\n  const compSel = computerPlay();\n  return (\n    <div className=\"App\">\n      <form onSubmit={() => handleSubmit(compSel)}>\n        <label>\n          Player Choose:\n          <input type=\"text\" name=\"playerChoice\" value={playerSel} onChange={e => handleChange(e)}/>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {/*{console.log('Player choose', playerSel, '\\nComp choose', compSel, '\\nResult', playRound(playerSel, compSel))}*/}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}